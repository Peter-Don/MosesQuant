{"$message_type":"diagnostic","message":"unresolved import `pythonize`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":17117,"byte_end":17126,"line_start":382,"line_end":382,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use pythonize;","highlight_start":5,"highlight_end":14}],"label":"no external crate `pythonize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `pythonize`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:382:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse pythonize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno external crate `pythonize`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `pythonize`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\python_strategy\\mod.rs","byte_start":16876,"byte_end":16885,"line_start":476,"line_end":476,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use pythonize::{pythonize, depythonize};","highlight_start":5,"highlight_end":14}],"label":"use of undeclared crate or module `pythonize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `pythonize`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\mod.rs:476:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m476\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse pythonize::{pythonize, depythonize};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `pythonize`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `futures`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":410,"byte_end":417,"line_start":13,"line_end":13,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use futures::stream::{self, StreamExt};","highlight_start":5,"highlight_end":12}],"label":"use of undeclared crate or module `futures`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `futures`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\backtest_engine.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse futures::stream::{self, StreamExt};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `futures`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `futures`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":410,"byte_end":417,"line_start":13,"line_end":13,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use futures::stream::{self, StreamExt};","highlight_start":5,"highlight_end":12}],"label":"use of undeclared crate or module `futures`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `futures`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\backtest_engine.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse futures::stream::{self, StreamExt};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `futures`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `chrono_tz`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\market_adapters\\market_configs.rs","byte_start":7051,"byte_end":7060,"line_start":191,"line_end":191,"column_start":45,"column_end":54,"is_primary":true,"text":[{"text":"        let shanghai_dt = dt.with_timezone(&chrono_tz::Asia::Shanghai);","highlight_start":45,"highlight_end":54}],"label":"use of undeclared crate or module `chrono_tz`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a crate or module with a similar name","code":null,"level":"help","spans":[{"file_name":"src\\market_adapters\\market_configs.rs","byte_start":7051,"byte_end":7060,"line_start":191,"line_end":191,"column_start":45,"column_end":54,"is_primary":true,"text":[{"text":"        let shanghai_dt = dt.with_timezone(&chrono_tz::Asia::Shanghai);","highlight_start":45,"highlight_end":54}],"label":null,"suggested_replacement":"chrono","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `chrono_tz`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\market_adapters\\market_configs.rs:191:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let shanghai_dt = dt.with_timezone(&chrono_tz::Asia::Shanghai);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `chrono_tz`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a crate or module with a similar name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let shanghai_dt = dt.with_timezone(&\u001b[0m\u001b[0m\u001b[38;5;10mchrono\u001b[0m\u001b[0m::Asia::Shanghai);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `chrono_tz`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\market_adapters\\market_configs.rs","byte_start":13894,"byte_end":13903,"line_start":379,"line_end":379,"column_start":39,"column_end":48,"is_primary":true,"text":[{"text":"        let ny_dt = dt.with_timezone(&chrono_tz::America::New_York);","highlight_start":39,"highlight_end":48}],"label":"use of undeclared crate or module `chrono_tz`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a crate or module with a similar name","code":null,"level":"help","spans":[{"file_name":"src\\market_adapters\\market_configs.rs","byte_start":13894,"byte_end":13903,"line_start":379,"line_end":379,"column_start":39,"column_end":48,"is_primary":true,"text":[{"text":"        let ny_dt = dt.with_timezone(&chrono_tz::America::New_York);","highlight_start":39,"highlight_end":48}],"label":null,"suggested_replacement":"chrono","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `chrono_tz`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\market_adapters\\market_configs.rs:379:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m379\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let ny_dt = dt.with_timezone(&chrono_tz::America::New_York);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `chrono_tz`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a crate or module with a similar name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m379\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let ny_dt = dt.with_timezone(&\u001b[0m\u001b[0m\u001b[38;5;10mchrono\u001b[0m\u001b[0m::America::New_York);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `chrono_tz`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\market_adapters\\market_configs.rs","byte_start":24677,"byte_end":24686,"line_start":692,"line_end":692,"column_start":45,"column_end":54,"is_primary":true,"text":[{"text":"        let shanghai_dt = dt.with_timezone(&chrono_tz::Asia::Shanghai);","highlight_start":45,"highlight_end":54}],"label":"use of undeclared crate or module `chrono_tz`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a crate or module with a similar name","code":null,"level":"help","spans":[{"file_name":"src\\market_adapters\\market_configs.rs","byte_start":24677,"byte_end":24686,"line_start":692,"line_end":692,"column_start":45,"column_end":54,"is_primary":true,"text":[{"text":"        let shanghai_dt = dt.with_timezone(&chrono_tz::Asia::Shanghai);","highlight_start":45,"highlight_end":54}],"label":null,"suggested_replacement":"chrono","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `chrono_tz`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\market_adapters\\market_configs.rs:692:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m692\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let shanghai_dt = dt.with_timezone(&chrono_tz::Asia::Shanghai);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `chrono_tz`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a crate or module with a similar name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m692\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let shanghai_dt = dt.with_timezone(&\u001b[0m\u001b[0m\u001b[38;5;10mchrono\u001b[0m\u001b[0m::Asia::Shanghai);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `chrono_tz`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\market_adapters\\market_configs.rs","byte_start":31941,"byte_end":31950,"line_start":881,"line_end":881,"column_start":39,"column_end":48,"is_primary":true,"text":[{"text":"        let hk_dt = dt.with_timezone(&chrono_tz::Asia::Hong_Kong);","highlight_start":39,"highlight_end":48}],"label":"use of undeclared crate or module `chrono_tz`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a crate or module with a similar name","code":null,"level":"help","spans":[{"file_name":"src\\market_adapters\\market_configs.rs","byte_start":31941,"byte_end":31950,"line_start":881,"line_end":881,"column_start":39,"column_end":48,"is_primary":true,"text":[{"text":"        let hk_dt = dt.with_timezone(&chrono_tz::Asia::Hong_Kong);","highlight_start":39,"highlight_end":48}],"label":null,"suggested_replacement":"chrono","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `chrono_tz`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\market_adapters\\market_configs.rs:881:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m881\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let hk_dt = dt.with_timezone(&chrono_tz::Asia::Hong_Kong);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `chrono_tz`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a crate or module with a similar name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m881\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let hk_dt = dt.with_timezone(&\u001b[0m\u001b[0m\u001b[38;5;10mchrono\u001b[0m\u001b[0m::Asia::Hong_Kong);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `czsc_enhanced` in the crate root","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":13083,"byte_end":13096,"line_start":292,"line_end":292,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"                    crate::czsc_enhanced::indicators::calculate_sma(&data, period)","highlight_start":28,"highlight_end":41}],"label":"could not find `czsc_enhanced` in the crate root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `czsc_enhanced` in the crate root\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:292:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    crate::czsc_enhanced::indicators::calculate_sma(&data, period)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `czsc_enhanced` in the crate root\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `czsc_enhanced` in the crate root","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":13325,"byte_end":13338,"line_start":296,"line_end":296,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"                    crate::czsc_enhanced::indicators::calculate_ema(&data, period)","highlight_start":28,"highlight_end":41}],"label":"could not find `czsc_enhanced` in the crate root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `czsc_enhanced` in the crate root\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:296:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    crate::czsc_enhanced::indicators::calculate_ema(&data, period)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `czsc_enhanced` in the crate root\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `czsc_enhanced` in the crate root","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":13567,"byte_end":13580,"line_start":300,"line_end":300,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"                    crate::czsc_enhanced::indicators::calculate_rsi(&data, period)","highlight_start":28,"highlight_end":41}],"label":"could not find `czsc_enhanced` in the crate root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `czsc_enhanced` in the crate root\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:300:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    crate::czsc_enhanced::indicators::calculate_rsi(&data, period)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `czsc_enhanced` in the crate root\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `czsc_enhanced` in the crate root","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":14027,"byte_end":14040,"line_start":306,"line_end":306,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"                    crate::czsc_enhanced::indicators::calculate_macd(&data, fast, slow, signal)","highlight_start":28,"highlight_end":41}],"label":"could not find `czsc_enhanced` in the crate root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `czsc_enhanced` in the crate root\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:306:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    crate::czsc_enhanced::indicators::calculate_macd(&data, fast, slow, signal)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `czsc_enhanced` in the crate root\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `czsc_enhanced` in the crate root","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":16437,"byte_end":16450,"line_start":360,"line_end":360,"column_start":24,"column_end":37,"is_primary":true,"text":[{"text":"    let stats = crate::czsc_enhanced::statistics::calculate_basic_stats(&data)","highlight_start":24,"highlight_end":37}],"label":"could not find `czsc_enhanced` in the crate root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `czsc_enhanced` in the crate root\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:360:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m360\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let stats = crate::czsc_enhanced::statistics::calculate_basic_stats(&data)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `czsc_enhanced` in the crate root\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `data_engine` in `super`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\platform\\market_engine\\mod.rs","byte_start":2075,"byte_end":2086,"line_start":82,"line_end":82,"column_start":63,"column_end":74,"is_primary":true,"text":[{"text":"    pub async fn set_data_handler(&self, _handler: Arc<super::data_engine::DataEngine>) -> Result<()> {","highlight_start":63,"highlight_end":74}],"label":"could not find `data_engine` in `super`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `data_engine` in `super`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\platform\\market_engine\\mod.rs:82:63\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub async fn set_data_handler(&self, _handler: Arc<super::data_engine::DataEngine>) -> Result<()> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `data_engine` in `super`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: unresolved import","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":23843,"byte_end":23847,"line_start":622,"line_end":622,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            risk_manager: Box::new(crate::risk::DefaultRiskManager::new()),","highlight_start":43,"highlight_end":47}],"label":"unresolved import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar path exists","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":23843,"byte_end":23847,"line_start":622,"line_end":622,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"            risk_manager: Box::new(crate::risk::DefaultRiskManager::new()),","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"trading::risk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: unresolved import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\backtest_engine.rs:622:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m622\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            risk_manager: Box::new(crate::risk::DefaultRiskManager::new()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munresolved import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar path exists: `trading::risk`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `TradingEvent` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":4837,"byte_end":4849,"line_start":181,"line_end":181,"column_start":39,"column_end":51,"is_primary":true,"text":[{"text":"    event_sender: Option<mpsc::Sender<TradingEvent>>,","highlight_start":39,"highlight_end":51}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":4308,"byte_end":4308,"line_start":165,"line_end":165,"column_start":30,"column_end":30,"is_primary":true,"text":[{"text":"pub struct SimulatorConnector {","highlight_start":30,"highlight_end":30}],"label":null,"suggested_replacement":"<TradingEvent>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `TradingEvent` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\simulator.rs:181:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    event_sender: Option<mpsc::Sender<TradingEvent>>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might be missing a type parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mpub struct SimulatorConnector\u001b[0m\u001b[0m\u001b[38;5;10m<TradingEvent>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find trait `ExchangeConnector` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":16460,"byte_end":16477,"line_start":503,"line_end":503,"column_start":6,"column_end":23,"is_primary":true,"text":[{"text":"impl ExchangeConnector for SimulatorConnector {","highlight_start":6,"highlight_end":23}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find trait `ExchangeConnector` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\simulator.rs:503:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m503\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl ExchangeConnector for SimulatorConnector {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `Balance` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":19461,"byte_end":19468,"line_start":593,"line_end":593,"column_start":49,"column_end":56,"is_primary":true,"text":[{"text":"    async fn query_balance(&self) -> Result<Vec<Balance>> {","highlight_start":49,"highlight_end":56}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":16459,"byte_end":16459,"line_start":503,"line_end":503,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"impl ExchangeConnector for SimulatorConnector {","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"<Balance>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `Balance` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\simulator.rs:593:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m593\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn query_balance(&self) -> Result<Vec<Balance>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might be missing a type parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m503\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mimpl\u001b[0m\u001b[0m\u001b[38;5;10m<Balance>\u001b[0m\u001b[0m ExchangeConnector for SimulatorConnector {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find struct, variant or union type `Balance` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":19826,"byte_end":19833,"line_start":601,"line_end":601,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"            balances.push(Balance {","highlight_start":27,"highlight_end":34}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find struct, variant or union type `Balance` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\simulator.rs:601:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m601\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balances.push(Balance {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `ExchangeInfo` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src\\types.rs","byte_start":14425,"byte_end":14450,"line_start":545,"line_end":545,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct ExchangeConfig {","highlight_start":1,"highlight_end":26}],"label":"similarly named struct `ExchangeConfig` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\connectors\\simulator.rs","byte_start":20694,"byte_end":20706,"line_start":630,"line_end":630,"column_start":49,"column_end":61,"is_primary":true,"text":[{"text":"    async fn get_exchange_info(&self) -> Result<ExchangeInfo> {","highlight_start":49,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":20694,"byte_end":20706,"line_start":630,"line_end":630,"column_start":49,"column_end":61,"is_primary":true,"text":[{"text":"    async fn get_exchange_info(&self) -> Result<ExchangeInfo> {","highlight_start":49,"highlight_end":61}],"label":null,"suggested_replacement":"ExchangeConfig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":16459,"byte_end":16459,"line_start":503,"line_end":503,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"impl ExchangeConnector for SimulatorConnector {","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"<ExchangeInfo>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `ExchangeInfo` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\simulator.rs:630:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m630\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn get_exchange_info(&self) -> Result<ExchangeInfo> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\types.rs:545:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m545\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct ExchangeConfig {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named struct `ExchangeConfig` defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a struct with a similar name exists\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m630\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    async fn get_exchange_info(&self) -> Result<\u001b[0m\u001b[0m\u001b[38;5;10mExchangeConfig\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might be missing a type parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m503\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mimpl\u001b[0m\u001b[0m\u001b[38;5;10m<ExchangeInfo>\u001b[0m\u001b[0m ExchangeConnector for SimulatorConnector {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find struct, variant or union type `ExchangeInfo` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src\\types.rs","byte_start":14425,"byte_end":14450,"line_start":545,"line_end":545,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct ExchangeConfig {","highlight_start":1,"highlight_end":26}],"label":"similarly named struct `ExchangeConfig` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\connectors\\simulator.rs","byte_start":20721,"byte_end":20733,"line_start":631,"line_end":631,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"        Ok(ExchangeInfo {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":20721,"byte_end":20733,"line_start":631,"line_end":631,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"        Ok(ExchangeInfo {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":"ExchangeConfig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find struct, variant or union type `ExchangeInfo` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\simulator.rs:631:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m631\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Ok(ExchangeInfo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a struct with a similar name exists: `ExchangeConfig`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\types.rs:545:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m545\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct ExchangeConfig {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named struct `ExchangeConfig` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find trait `ExchangeConnector` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\connectors\\unified_manager.rs","byte_start":1969,"byte_end":1986,"line_start":60,"line_end":60,"column_start":22,"column_end":39,"is_primary":true,"text":[{"text":"    Exchange(Box<dyn ExchangeConnector>),","highlight_start":22,"highlight_end":39}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find trait `ExchangeConnector` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\unified_manager.rs:60:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Exchange(Box<dyn ExchangeConnector>),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":1760,"byte_end":1765,"line_start":55,"line_end":55,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"                Err(Error::Runtime(format!(\"不支持的自定义通道类型: {}\", name)))","highlight_start":21,"highlight_end":26}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:55:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                Err(Error::Runtime(format!(\"不支持的自定义通道类型: {}\", name)))\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":2069,"byte_end":2074,"line_start":63,"line_end":63,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(format!(\"不支持的通道类型: {:?}\", config.gateway_type)));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:63:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(format!(\"不支持的通道类型: {:?}\", config.gateway_type)));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":2264,"byte_end":2269,"line_start":68,"line_end":68,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(\"Gateway ID不能为空\".to_string()));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:68:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(\"Gateway ID不能为空\".to_string()));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":2400,"byte_end":2405,"line_start":72,"line_end":72,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(\"至少需要配置一个市场\".to_string()));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:72:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(\"至少需要配置一个市场\".to_string()));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":2894,"byte_end":2899,"line_start":81,"line_end":81,"column_start":43,"column_end":48,"is_primary":true,"text":[{"text":"            GatewayType::Custom(_) => Err(Error::Runtime(\"不支持自定义通道类型\".to_string())),","highlight_start":43,"highlight_end":48}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:81:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            GatewayType::Custom(_) => Err(Error::Runtime(\"不支持自定义通道类型\".to_string())),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":3339,"byte_end":3344,"line_start":95,"line_end":95,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(\"现货通道需要REST API端点\".to_string()));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:95:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(\"现货通道需要REST API端点\".to_string()));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":3708,"byte_end":3713,"line_start":104,"line_end":104,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(\"现货通道需要至少一个现货市场\".to_string()));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:104:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(\"现货通道需要至少一个现货市场\".to_string()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":4071,"byte_end":4076,"line_start":114,"line_end":114,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(\"衍生品通道需要REST API端点\".to_string()));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:114:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(\"衍生品通道需要REST API端点\".to_string()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":4545,"byte_end":4550,"line_start":126,"line_end":126,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(\"衍生品通道需要至少一个衍生品市场\".to_string()));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:126:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(\"衍生品通道需要至少一个衍生品市场\".to_string()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":4918,"byte_end":4923,"line_start":136,"line_end":136,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(\"外汇通道需要REST API端点\".to_string()));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:136:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(\"外汇通道需要REST API端点\".to_string()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":5101,"byte_end":5106,"line_start":141,"line_end":141,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(\"外汇通道需要认证配置\".to_string()));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:141:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(\"外汇通道需要认证配置\".to_string()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":5504,"byte_end":5509,"line_start":152,"line_end":152,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(\"外汇通道需要至少一个外汇市场\".to_string()));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:152:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(\"外汇通道需要至少一个外汇市场\".to_string()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":5975,"byte_end":5980,"line_start":164,"line_end":164,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"            return Err(Error::Runtime(\"API通道需要至少一个端点\".to_string()));","highlight_start":24,"highlight_end":29}],"label":"use of undeclared type `Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::fmt::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use anyhow::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use hyper::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use lz4_flex::frame::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use reqwest::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::de::value::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde::ser::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_json::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use serde_yaml::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use snap::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::io::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tokio::time::error::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tonic::transport::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use tracing_subscriber::reload::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":83,"byte_end":83,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use uuid::Error;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:164:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            return Err(Error::Runtime(\"API通道需要至少一个端点\".to_string()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Error`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::fmt::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::io::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use core::error::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 16 other candidates\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find trait `MarketDataConnector` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\connectors\\market_data.rs","byte_start":470,"byte_end":489,"line_start":23,"line_end":23,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"impl MarketDataConnector for MockMarketDataConnector {","highlight_start":6,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find trait `MarketDataConnector` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\market_data.rs:23:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl MarketDataConnector for MockMarketDataConnector {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find trait `TradingConnector` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\connectors\\trading_api.rs","byte_start":377,"byte_end":393,"line_start":21,"line_end":21,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"impl TradingConnector for MockTradingConnector {","highlight_start":6,"highlight_end":22}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find trait `TradingConnector` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\trading_api.rs:21:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl TradingConnector for MockTradingConnector {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `EngineConfig`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":1463,"byte_end":1475,"line_start":41,"line_end":41,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            EngineConfig::from_json(config_json)","highlight_start":13,"highlight_end":25}],"label":"use of undeclared type `EngineConfig`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":315,"byte_end":315,"line_start":8,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::engines::EngineConfig;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `EngineConfig`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:41:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            EngineConfig::from_json(config_json)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `EngineConfig`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::engines::EngineConfig;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `EngineConfig`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":1648,"byte_end":1660,"line_start":44,"line_end":44,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            EngineConfig::default()","highlight_start":13,"highlight_end":25}],"label":"use of undeclared type `EngineConfig`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":315,"byte_end":315,"line_start":8,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::engines::EngineConfig;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `EngineConfig`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:44:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            EngineConfig::default()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `EngineConfig`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::engines::EngineConfig;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `TimeFrame` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src\\types.rs","byte_start":355,"byte_end":390,"line_start":15,"line_end":15,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"pub type Timestamp = DateTime<Utc>;","highlight_start":1,"highlight_end":36}],"label":"similarly named type alias `Timestamp` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":10699,"byte_end":10708,"line_start":242,"line_end":242,"column_start":55,"column_end":64,"is_primary":true,"text":[{"text":"                let timeframe = timeframe_str.parse::<TimeFrame>()","highlight_start":55,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a type alias with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":10699,"byte_end":10708,"line_start":242,"line_end":242,"column_start":55,"column_end":64,"is_primary":true,"text":[{"text":"                let timeframe = timeframe_str.parse::<TimeFrame>()","highlight_start":55,"highlight_end":64}],"label":null,"suggested_replacement":"Timestamp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":1081,"byte_end":1081,"line_start":33,"line_end":33,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"impl CzscEngine {","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"<TimeFrame>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `TimeFrame` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:242:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let timeframe = timeframe_str.parse::<TimeFrame>()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\types.rs:15:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type Timestamp = DateTime<Utc>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named type alias `Timestamp` defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a type alias with a similar name exists\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                let timeframe = timeframe_str.parse::<\u001b[0m\u001b[0m\u001b[38;5;10mTimestamp\u001b[0m\u001b[0m>()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might be missing a type parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mimpl\u001b[0m\u001b[0m\u001b[38;5;10m<TimeFrame>\u001b[0m\u001b[0m CzscEngine {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `TimeFrame` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src\\types.rs","byte_start":355,"byte_end":390,"line_start":15,"line_end":15,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"pub type Timestamp = DateTime<Utc>;","highlight_start":1,"highlight_end":36}],"label":"similarly named type alias `Timestamp` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":17063,"byte_end":17072,"line_start":378,"line_end":378,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"    timeframe.parse::<TimeFrame>().is_ok()","highlight_start":23,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a type alias with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":17063,"byte_end":17072,"line_start":378,"line_end":378,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"    timeframe.parse::<TimeFrame>().is_ok()","highlight_start":23,"highlight_end":32}],"label":null,"suggested_replacement":"Timestamp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":16980,"byte_end":16980,"line_start":376,"line_end":376,"column_start":22,"column_end":22,"is_primary":true,"text":[{"text":"fn validate_timeframe(timeframe: &str) -> bool {","highlight_start":22,"highlight_end":22}],"label":null,"suggested_replacement":"<TimeFrame>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `TimeFrame` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:378:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m378\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    timeframe.parse::<TimeFrame>().is_ok()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\types.rs:15:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type Timestamp = DateTime<Utc>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named type alias `Timestamp` defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a type alias with a similar name exists\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m378\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    timeframe.parse::<\u001b[0m\u001b[0m\u001b[38;5;10mTimestamp\u001b[0m\u001b[0m>().is_ok()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might be missing a type parameter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn validate_timeframe\u001b[0m\u001b[0m\u001b[38;5;10m<TimeFrame>\u001b[0m\u001b[0m(timeframe: &str) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find trait `StrategyBase` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\python_strategy\\mod.rs","byte_start":8011,"byte_end":8023,"line_start":245,"line_end":245,"column_start":6,"column_end":18,"is_primary":true,"text":[{"text":"impl StrategyBase for PyStrategyAdapter {","highlight_start":6,"highlight_end":18}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find trait `StrategyBase` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\mod.rs:245:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl StrategyBase for PyStrategyAdapter {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: unresolved import","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":6669,"byte_end":6673,"line_start":254,"line_end":254,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"        risk_event: crate::risk::RiskEvent,","highlight_start":28,"highlight_end":32}],"label":"unresolved import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar path exists","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":6669,"byte_end":6673,"line_start":254,"line_end":254,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"        risk_event: crate::risk::RiskEvent,","highlight_start":28,"highlight_end":32}],"label":null,"suggested_replacement":"trading::risk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this module","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":636,"byte_end":636,"line_start":16,"line_end":16,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::trading::risk;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `risk`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":6662,"byte_end":6669,"line_start":254,"line_end":254,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"        risk_event: crate::risk::RiskEvent,","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: unresolved import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\mod.rs:254:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        risk_event: crate::risk::RiskEvent,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munresolved import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar path exists\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        risk_event: crate::\u001b[0m\u001b[0m\u001b[38;5;10mtrading::risk\u001b[0m\u001b[0m::RiskEvent,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this module\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::trading::risk;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `risk`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        risk_event: \u001b[0m\u001b[0m\u001b[38;5;9mcrate::\u001b[0m\u001b[0mrisk::RiskEvent,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        risk_event: risk::RiskEvent,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: unresolved import","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":17498,"byte_end":17502,"line_start":668,"line_end":668,"column_start":38,"column_end":42,"is_primary":true,"text":[{"text":"    pub risk_manager: Box<dyn crate::risk::RiskManager>,","highlight_start":38,"highlight_end":42}],"label":"unresolved import","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar path exists","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":17498,"byte_end":17502,"line_start":668,"line_end":668,"column_start":38,"column_end":42,"is_primary":true,"text":[{"text":"    pub risk_manager: Box<dyn crate::risk::RiskManager>,","highlight_start":38,"highlight_end":42}],"label":null,"suggested_replacement":"trading::risk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this module","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":636,"byte_end":636,"line_start":16,"line_end":16,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::trading::risk;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `risk`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":17491,"byte_end":17498,"line_start":668,"line_end":668,"column_start":31,"column_end":38,"is_primary":true,"text":[{"text":"    pub risk_manager: Box<dyn crate::risk::RiskManager>,","highlight_start":31,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: unresolved import\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\mod.rs:668:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m668\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub risk_manager: Box<dyn crate::risk::RiskManager>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munresolved import\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar path exists\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m668\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    pub risk_manager: Box<dyn crate::\u001b[0m\u001b[0m\u001b[38;5;10mtrading::risk\u001b[0m\u001b[0m::RiskManager>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this module\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::trading::risk;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `risk`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m668\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub risk_manager: Box<dyn \u001b[0m\u001b[0m\u001b[38;5;9mcrate::\u001b[0m\u001b[0mrisk::RiskManager>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m668\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub risk_manager: Box<dyn risk::RiskManager>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `RiskAnalysis` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":8322,"byte_end":8334,"line_start":359,"line_end":359,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"    pub risk_analysis: RiskAnalysis,","highlight_start":24,"highlight_end":36}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":604,"byte_end":604,"line_start":16,"line_end":16,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::backtest::RiskAnalysis;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `RiskAnalysis` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\performance\\mod.rs:359:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m359\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub risk_analysis: RiskAnalysis,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::backtest::RiskAnalysis;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `RiskMetrics` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":8653,"byte_end":8664,"line_start":369,"line_end":369,"column_start":23,"column_end":34,"is_primary":true,"text":[{"text":"    pub risk_metrics: RiskMetrics,","highlight_start":23,"highlight_end":34}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":604,"byte_end":604,"line_start":16,"line_end":16,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::trading::risk::RiskMetrics;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `RiskMetrics` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\performance\\mod.rs:369:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub risk_metrics: RiskMetrics,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::trading::risk::RiskMetrics;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `PerformanceMetrics` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":16367,"byte_end":16394,"line_start":671,"line_end":671,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"pub struct PerformanceAlert {","highlight_start":1,"highlight_end":28}],"label":"similarly named struct `PerformanceAlert` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\performance\\mod.rs","byte_start":15544,"byte_end":15562,"line_start":643,"line_end":643,"column_start":46,"column_end":64,"is_primary":true,"text":[{"text":"        benchmark_returns: &[f64]) -> Result<PerformanceMetrics>;","highlight_start":46,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":15544,"byte_end":15562,"line_start":643,"line_end":643,"column_start":46,"column_end":64,"is_primary":true,"text":[{"text":"        benchmark_returns: &[f64]) -> Result<PerformanceMetrics>;","highlight_start":46,"highlight_end":64}],"label":null,"suggested_replacement":"PerformanceAlert","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":604,"byte_end":604,"line_start":16,"line_end":16,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::analytics::indicators::PerformanceMetrics;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\performance\\mod.rs","byte_start":604,"byte_end":604,"line_start":16,"line_end":16,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::backtest::PerformanceMetrics;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\performance\\mod.rs","byte_start":604,"byte_end":604,"line_start":16,"line_end":16,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::connectors::PerformanceMetrics;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `PerformanceMetrics` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\performance\\mod.rs:643:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m643\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        benchmark_returns: &[f64]) -> Result<PerformanceMetrics>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m671\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PerformanceAlert {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named struct `PerformanceAlert` defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a struct with a similar name exists\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m643\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        benchmark_returns: &[f64]) -> Result<\u001b[0m\u001b[0m\u001b[38;5;10mPerformanceAlert\u001b[0m\u001b[0m>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::analytics::indicators::PerformanceMetrics;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::backtest::PerformanceMetrics;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::connectors::PerformanceMetrics;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `RiskAnalysis` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":16006,"byte_end":16018,"line_start":657,"line_end":657,"column_start":42,"column_end":54,"is_primary":true,"text":[{"text":"        portfolio: &Portfolio) -> Result<RiskAnalysis>;","highlight_start":42,"highlight_end":54}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":604,"byte_end":604,"line_start":16,"line_end":16,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::backtest::RiskAnalysis;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `RiskAnalysis` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\performance\\mod.rs:657:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m657\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        portfolio: &Portfolio) -> Result<RiskAnalysis>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::backtest::RiskAnalysis;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `NaiveDateTime`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\types.rs","byte_start":171,"byte_end":184,"line_start":6,"line_end":6,"column_start":29,"column_end":42,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc, NaiveDateTime};","highlight_start":29,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\types.rs","byte_start":169,"byte_end":184,"line_start":6,"line_end":6,"column_start":27,"column_end":42,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc, NaiveDateTime};","highlight_start":27,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `NaiveDateTime`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\types.rs:6:29\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse chrono::{DateTime, Utc, NaiveDateTime};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\data\\mod.rs","byte_start":535,"byte_end":540,"line_start":15,"line_end":15,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, Mutex};","highlight_start":27,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\data\\mod.rs","byte_start":533,"byte_end":540,"line_start":15,"line_end":15,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, Mutex};","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\data\\mod.rs","byte_start":526,"byte_end":527,"line_start":15,"line_end":15,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, Mutex};","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\data\\mod.rs","byte_start":540,"byte_end":541,"line_start":15,"line_end":15,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, Mutex};","highlight_start":32,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\data\\mod.rs:15:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::sync::{RwLock, Mutex};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `CzscError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\data\\mod.rs","byte_start":658,"byte_end":667,"line_start":19,"line_end":19,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\data\\mod.rs","byte_start":656,"byte_end":667,"line_start":19,"line_end":19,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `CzscError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\data\\mod.rs:19:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError, types::*};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `DataManagerConfig` and `DataStats`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\data\\unified_data_engine.rs","byte_start":595,"byte_end":612,"line_start":15,"line_end":15,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"use super::{DataManagerConfig, DataQuery, DataType, DataStats};","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\data\\unified_data_engine.rs","byte_start":635,"byte_end":644,"line_start":15,"line_end":15,"column_start":53,"column_end":62,"is_primary":true,"text":[{"text":"use super::{DataManagerConfig, DataQuery, DataType, DataStats};","highlight_start":53,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\data\\unified_data_engine.rs","byte_start":595,"byte_end":614,"line_start":15,"line_end":15,"column_start":13,"column_end":32,"is_primary":true,"text":[{"text":"use super::{DataManagerConfig, DataQuery, DataType, DataStats};","highlight_start":13,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\data\\unified_data_engine.rs","byte_start":633,"byte_end":644,"line_start":15,"line_end":15,"column_start":51,"column_end":62,"is_primary":true,"text":[{"text":"use super::{DataManagerConfig, DataQuery, DataType, DataStats};","highlight_start":51,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `DataManagerConfig` and `DataStats`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\data\\unified_data_engine.rs:15:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::{DataManagerConfig, DataQuery, DataType, DataStats};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\data\\unified_data_engine.rs","byte_start":724,"byte_end":729,"line_start":18,"line_end":18,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, Mutex, mpsc};","highlight_start":27,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\data\\unified_data_engine.rs","byte_start":722,"byte_end":729,"line_start":18,"line_end":18,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, Mutex, mpsc};","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\data\\unified_data_engine.rs:18:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::sync::{RwLock, Mutex, mpsc};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Duration as ChronoDuration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\data\\unified_data_engine.rs","byte_start":766,"byte_end":792,"line_start":19,"line_end":19,"column_start":29,"column_end":55,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc, Duration as ChronoDuration};","highlight_start":29,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\data\\unified_data_engine.rs","byte_start":764,"byte_end":792,"line_start":19,"line_end":19,"column_start":27,"column_end":55,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc, Duration as ChronoDuration};","highlight_start":27,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Duration as ChronoDuration`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\data\\unified_data_engine.rs:19:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse chrono::{DateTime, Utc, Duration as ChronoDuration};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Ordering`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\data\\unified_data_engine.rs","byte_start":880,"byte_end":888,"line_start":21,"line_end":21,"column_start":49,"column_end":57,"is_primary":true,"text":[{"text":"use std::sync::atomic::{AtomicU64, AtomicUsize, Ordering};","highlight_start":49,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\data\\unified_data_engine.rs","byte_start":878,"byte_end":888,"line_start":21,"line_end":21,"column_start":47,"column_end":57,"is_primary":true,"text":[{"text":"use std::sync::atomic::{AtomicU64, AtomicUsize, Ordering};","highlight_start":47,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Ordering`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\data\\unified_data_engine.rs:21:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::atomic::{AtomicU64, AtomicUsize, Ordering};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":633,"byte_end":647,"line_start":14,"line_end":14,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"#[cfg(feature = \"ta\")]","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:14:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(feature = \"ta\")]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta-lib`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":680,"byte_end":698,"line_start":17,"line_end":17,"column_start":7,"column_end":25,"is_primary":true,"text":[{"text":"#[cfg(feature = \"ta-lib\")]","highlight_start":7,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta-lib` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta-lib`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:17:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(feature = \"ta-lib\")]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta-lib` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":2025,"byte_end":2039,"line_start":58,"line_end":58,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"ta\")]","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:58:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"ta\")]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta-lib`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":2086,"byte_end":2104,"line_start":61,"line_end":61,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"ta-lib\")]  ","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta-lib` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta-lib`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:61:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"ta-lib\")]  \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta-lib` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":444,"byte_end":452,"line_start":8,"line_end":8,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":442,"byte_end":452,"line_start":8,"line_end":8,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":30,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `types::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:8:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError, types::*};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `VecDeque`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":524,"byte_end":532,"line_start":10,"line_end":10,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, VecDeque};","highlight_start":33,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":522,"byte_end":532,"line_start":10,"line_end":10,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, VecDeque};","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":514,"byte_end":515,"line_start":10,"line_end":10,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, VecDeque};","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":532,"byte_end":533,"line_start":10,"line_end":10,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, VecDeque};","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `VecDeque`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:10:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, VecDeque};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":24330,"byte_end":24344,"line_start":716,"line_end":716,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"ta\")]","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:716:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m716\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"ta\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta-lib`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":24411,"byte_end":24429,"line_start":719,"line_end":719,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"ta-lib\")]","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta-lib` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta-lib`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:719:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m719\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"ta-lib\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta-lib` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":25888,"byte_end":25902,"line_start":762,"line_end":762,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"ta\")]","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:762:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m762\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"ta\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":31258,"byte_end":31272,"line_start":861,"line_end":861,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"ta\")]","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:861:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m861\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"ta\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":31926,"byte_end":31940,"line_start":879,"line_end":879,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"ta\")]  ","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:879:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m879\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"ta\")]  \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta-lib`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":32941,"byte_end":32959,"line_start":903,"line_end":903,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"ta-lib\")]","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta-lib` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta-lib`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:903:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m903\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"ta-lib\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta-lib` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":24704,"byte_end":24718,"line_start":730,"line_end":730,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"            #[cfg(feature = \"ta\")]","highlight_start":19,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:730:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m730\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            #[cfg(feature = \"ta\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta-lib`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":24769,"byte_end":24787,"line_start":732,"line_end":732,"column_start":19,"column_end":37,"is_primary":true,"text":[{"text":"            #[cfg(feature = \"ta-lib\")]","highlight_start":19,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta-lib` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta-lib`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:732:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m732\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            #[cfg(feature = \"ta-lib\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta-lib` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":25128,"byte_end":25142,"line_start":742,"line_end":742,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"            #[cfg(feature = \"ta\")]","highlight_start":19,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:742:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m742\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            #[cfg(feature = \"ta\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta-lib`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":25325,"byte_end":25343,"line_start":747,"line_end":747,"column_start":19,"column_end":37,"is_primary":true,"text":[{"text":"            #[cfg(feature = \"ta-lib\")]","highlight_start":19,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta-lib` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta-lib`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:747:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m747\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            #[cfg(feature = \"ta-lib\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta-lib` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":35253,"byte_end":35267,"line_start":956,"line_end":956,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"            #[cfg(feature = \"ta\")]","highlight_start":19,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:956:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m956\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            #[cfg(feature = \"ta\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta-lib`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":35440,"byte_end":35458,"line_start":961,"line_end":961,"column_start":19,"column_end":37,"is_primary":true,"text":[{"text":"            #[cfg(feature = \"ta-lib\")]","highlight_start":19,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta-lib` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta-lib`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:961:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m961\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            #[cfg(feature = \"ta-lib\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta-lib` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `ta`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"src\\analytics\\indicators\\mod.rs","byte_start":38266,"byte_end":38280,"line_start":1042,"line_end":1042,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"    #[cfg(feature = \"ta\")]","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default` and `python`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `ta` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected `cfg` condition value: `ta`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\analytics\\indicators\\mod.rs:1042:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1042\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(feature = \"ta\")]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default` and `python`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: consider adding `ta` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `BTreeMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":433,"byte_end":441,"line_start":14,"line_end":14,"column_start":43,"column_end":51,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, VecDeque, BTreeMap};","highlight_start":43,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":431,"byte_end":441,"line_start":14,"line_end":14,"column_start":41,"column_end":51,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, VecDeque, BTreeMap};","highlight_start":41,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `BTreeMap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\simulator.rs:14:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, VecDeque, BTreeMap};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":514,"byte_end":522,"line_start":17,"line_end":17,"column_start":19,"column_end":27,"is_primary":true,"text":[{"text":"use tokio::time::{Duration, Instant};","highlight_start":19,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\simulator.rs","byte_start":514,"byte_end":524,"line_start":17,"line_end":17,"column_start":19,"column_end":29,"is_primary":true,"text":[{"text":"use tokio::time::{Duration, Instant};","highlight_start":19,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\simulator.rs","byte_start":513,"byte_end":514,"line_start":17,"line_end":17,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"use tokio::time::{Duration, Instant};","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\simulator.rs","byte_start":531,"byte_end":532,"line_start":17,"line_end":17,"column_start":36,"column_end":37,"is_primary":true,"text":[{"text":"use tokio::time::{Duration, Instant};","highlight_start":36,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Duration`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\simulator.rs:17:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::time::{Duration, Instant};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ExchangeType`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\futures.rs","byte_start":478,"byte_end":490,"line_start":13,"line_end":13,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"use crate::types::{ExchangeType};","highlight_start":20,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\futures.rs","byte_start":459,"byte_end":493,"line_start":13,"line_end":14,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::types::{ExchangeType};","highlight_start":1,"highlight_end":34},{"text":"use async_trait::async_trait;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `ExchangeType`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\futures.rs:13:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::types::{ExchangeType};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `CryptoConnector`, `FuturesConnector`, `GatewayState`, and `GatewayType`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\unified_manager.rs","byte_start":265,"byte_end":276,"line_start":8,"line_end":8,"column_start":41,"column_end":52,"is_primary":true,"text":[{"text":"    gateway_interface::{TradingGateway, GatewayType, GatewayState, GatewayConfig},","highlight_start":41,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\connectors\\unified_manager.rs","byte_start":278,"byte_end":290,"line_start":8,"line_end":8,"column_start":54,"column_end":66,"is_primary":true,"text":[{"text":"    gateway_interface::{TradingGateway, GatewayType, GatewayState, GatewayConfig},","highlight_start":54,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\connectors\\unified_manager.rs","byte_start":413,"byte_end":429,"line_start":10,"line_end":10,"column_start":15,"column_end":31,"is_primary":true,"text":[{"text":"    futures::{FuturesConnector, FuturesConnectorFactory},","highlight_start":15,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\connectors\\unified_manager.rs","byte_start":470,"byte_end":485,"line_start":11,"line_end":11,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"    crypto::{CryptoConnector, CryptoConnectorFactory},","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\unified_manager.rs","byte_start":263,"byte_end":290,"line_start":8,"line_end":8,"column_start":39,"column_end":66,"is_primary":true,"text":[{"text":"    gateway_interface::{TradingGateway, GatewayType, GatewayState, GatewayConfig},","highlight_start":39,"highlight_end":66}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\unified_manager.rs","byte_start":413,"byte_end":431,"line_start":10,"line_end":10,"column_start":15,"column_end":33,"is_primary":true,"text":[{"text":"    futures::{FuturesConnector, FuturesConnectorFactory},","highlight_start":15,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\unified_manager.rs","byte_start":412,"byte_end":413,"line_start":10,"line_end":10,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"    futures::{FuturesConnector, FuturesConnectorFactory},","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\unified_manager.rs","byte_start":454,"byte_end":455,"line_start":10,"line_end":10,"column_start":56,"column_end":57,"is_primary":true,"text":[{"text":"    futures::{FuturesConnector, FuturesConnectorFactory},","highlight_start":56,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\unified_manager.rs","byte_start":470,"byte_end":487,"line_start":11,"line_end":11,"column_start":14,"column_end":31,"is_primary":true,"text":[{"text":"    crypto::{CryptoConnector, CryptoConnectorFactory},","highlight_start":14,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\unified_manager.rs","byte_start":469,"byte_end":470,"line_start":11,"line_end":11,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    crypto::{CryptoConnector, CryptoConnectorFactory},","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\unified_manager.rs","byte_start":509,"byte_end":510,"line_start":11,"line_end":11,"column_start":53,"column_end":54,"is_primary":true,"text":[{"text":"    crypto::{CryptoConnector, CryptoConnectorFactory},","highlight_start":53,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `CryptoConnector`, `FuturesConnector`, `GatewayState`, and `GatewayType`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\unified_manager.rs:8:41\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    gateway_interface::{TradingGateway, GatewayType, GatewayState, GatewayConfig},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // exchange_connector::{ExchangeConnector, ExchangeConfig, ExchangeType}, // 已删除\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    futures::{FuturesConnector, FuturesConnectorFactory},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    crypto::{CryptoConnector, CryptoConnectorFactory},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `async_trait::async_trait`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\unified_manager.rs","byte_start":554,"byte_end":578,"line_start":14,"line_end":14,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use async_trait::async_trait;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\unified_manager.rs","byte_start":550,"byte_end":580,"line_start":14,"line_end":15,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use async_trait::async_trait;","highlight_start":1,"highlight_end":30},{"text":"use serde::{Serialize, Deserialize};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `async_trait::async_trait`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\unified_manager.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse async_trait::async_trait;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `uuid::Uuid`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\unified_manager.rs","byte_start":705,"byte_end":715,"line_start":19,"line_end":19,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"use uuid::Uuid;","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\unified_manager.rs","byte_start":701,"byte_end":717,"line_start":19,"line_end":20,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use uuid::Uuid;","highlight_start":1,"highlight_end":16},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `uuid::Uuid`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\unified_manager.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse uuid::Uuid;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `CzscError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":103,"byte_end":112,"line_start":5,"line_end":5,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":101,"byte_end":112,"line_start":5,"line_end":5,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":94,"byte_end":95,"line_start":5,"line_end":5,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":112,"byte_end":113,"line_start":5,"line_end":5,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `CzscError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:5:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":152,"byte_end":177,"line_start":7,"line_end":7,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\gateway_factory.rs","byte_start":148,"byte_end":179,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\gateway_factory.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `CzscError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\market_data.rs","byte_start":53,"byte_end":62,"line_start":3,"line_end":3,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\market_data.rs","byte_start":51,"byte_end":62,"line_start":3,"line_end":3,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\market_data.rs","byte_start":44,"byte_end":45,"line_start":3,"line_end":3,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\market_data.rs","byte_start":62,"byte_end":63,"line_start":3,"line_end":3,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `CzscError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\market_data.rs:3:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ConnectorState as InternalConnectorState`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\mod.rs","byte_start":860,"byte_end":900,"line_start":29,"line_end":29,"column_start":5,"column_end":45,"is_primary":true,"text":[{"text":"    ConnectorState as InternalConnectorState,","highlight_start":5,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\mod.rs","byte_start":854,"byte_end":900,"line_start":28,"line_end":29,"column_start":48,"column_end":45,"is_primary":true,"text":[{"text":"    UnifiedConnectorType as InternalUnifiedType,","highlight_start":48,"highlight_end":49},{"text":"    ConnectorState as InternalConnectorState,","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `ConnectorState as InternalConnectorState`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\mod.rs:29:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ConnectorState as InternalConnectorState,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `mpsc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\connectors\\mod.rs","byte_start":1363,"byte_end":1367,"line_start":39,"line_end":39,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, mpsc};","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\connectors\\mod.rs","byte_start":1361,"byte_end":1367,"line_start":39,"line_end":39,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, mpsc};","highlight_start":25,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\mod.rs","byte_start":1354,"byte_end":1355,"line_start":39,"line_end":39,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, mpsc};","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\connectors\\mod.rs","byte_start":1367,"byte_end":1368,"line_start":39,"line_end":39,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, mpsc};","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `mpsc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\connectors\\mod.rs:39:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::sync::{RwLock, mpsc};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Instant`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\trading\\algorithms.rs","byte_start":291,"byte_end":298,"line_start":9,"line_end":9,"column_start":29,"column_end":36,"is_primary":true,"text":[{"text":"use tokio::time::{Duration, Instant};","highlight_start":29,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\trading\\algorithms.rs","byte_start":289,"byte_end":298,"line_start":9,"line_end":9,"column_start":27,"column_end":36,"is_primary":true,"text":[{"text":"use tokio::time::{Duration, Instant};","highlight_start":27,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\trading\\algorithms.rs","byte_start":280,"byte_end":281,"line_start":9,"line_end":9,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"use tokio::time::{Duration, Instant};","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\trading\\algorithms.rs","byte_start":298,"byte_end":299,"line_start":9,"line_end":9,"column_start":36,"column_end":37,"is_primary":true,"text":[{"text":"use tokio::time::{Duration, Instant};","highlight_start":36,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Instant`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\trading\\algorithms.rs:9:29\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::time::{Duration, Instant};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `GlobalAlloc`, `Layout`, and `System`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\engines\\uft_engine.rs","byte_start":426,"byte_end":437,"line_start":15,"line_end":15,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"use std::alloc::{GlobalAlloc, Layout, System};","highlight_start":18,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\engines\\uft_engine.rs","byte_start":439,"byte_end":445,"line_start":15,"line_end":15,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"use std::alloc::{GlobalAlloc, Layout, System};","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\engines\\uft_engine.rs","byte_start":447,"byte_end":453,"line_start":15,"line_end":15,"column_start":39,"column_end":45,"is_primary":true,"text":[{"text":"use std::alloc::{GlobalAlloc, Layout, System};","highlight_start":39,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\engines\\uft_engine.rs","byte_start":409,"byte_end":456,"line_start":15,"line_end":16,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::alloc::{GlobalAlloc, Layout, System};","highlight_start":1,"highlight_end":47},{"text":"use std::ptr::NonNull;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `GlobalAlloc`, `Layout`, and `System`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\engines\\uft_engine.rs:15:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::alloc::{GlobalAlloc, Layout, System};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Mutex as ParkingMutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\engines\\uft_engine.rs","byte_start":677,"byte_end":698,"line_start":22,"line_end":22,"column_start":44,"column_end":65,"is_primary":true,"text":[{"text":"use parking_lot::{RwLock as ParkingRwLock, Mutex as ParkingMutex};","highlight_start":44,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\engines\\uft_engine.rs","byte_start":675,"byte_end":698,"line_start":22,"line_end":22,"column_start":42,"column_end":65,"is_primary":true,"text":[{"text":"use parking_lot::{RwLock as ParkingRwLock, Mutex as ParkingMutex};","highlight_start":42,"highlight_end":65}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\engines\\uft_engine.rs","byte_start":651,"byte_end":652,"line_start":22,"line_end":22,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"use parking_lot::{RwLock as ParkingRwLock, Mutex as ParkingMutex};","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\engines\\uft_engine.rs","byte_start":698,"byte_end":699,"line_start":22,"line_end":22,"column_start":65,"column_end":66,"is_primary":true,"text":[{"text":"use parking_lot::{RwLock as ParkingRwLock, Mutex as ParkingMutex};","highlight_start":65,"highlight_end":66}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Mutex as ParkingMutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\engines\\uft_engine.rs:22:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse parking_lot::{RwLock as ParkingRwLock, Mutex as ParkingMutex};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::time::Instant`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\engines\\uft_engine.rs","byte_start":727,"byte_end":745,"line_start":24,"line_end":24,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::time::Instant;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\engines\\uft_engine.rs","byte_start":723,"byte_end":747,"line_start":24,"line_end":25,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::time::Instant;","highlight_start":1,"highlight_end":24},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::time::Instant`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\engines\\uft_engine.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::time::Instant;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `PyDict` and `PyList`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\python_strategy\\mod.rs","byte_start":537,"byte_end":543,"line_start":17,"line_end":17,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"use pyo3::types::{PyDict, PyList};","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\python_strategy\\mod.rs","byte_start":545,"byte_end":551,"line_start":17,"line_end":17,"column_start":27,"column_end":33,"is_primary":true,"text":[{"text":"use pyo3::types::{PyDict, PyList};","highlight_start":27,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\mod.rs","byte_start":519,"byte_end":554,"line_start":17,"line_end":18,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use pyo3::types::{PyDict, PyList};","highlight_start":1,"highlight_end":35},{"text":"use serde::{Deserialize, Serialize};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `PyDict` and `PyList`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\mod.rs:17:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse pyo3::types::{PyDict, PyList};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `EngineManager`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\python_strategy\\mod.rs","byte_start":655,"byte_end":668,"line_start":21,"line_end":21,"column_start":22,"column_end":35,"is_primary":true,"text":[{"text":"use crate::engines::{EngineManager}; // 更新到新的模块名称","highlight_start":22,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\mod.rs","byte_start":634,"byte_end":670,"line_start":21,"line_end":21,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::engines::{EngineManager}; // 更新到新的模块名称","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `EngineManager`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\mod.rs:21:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::engines::{EngineManager}; // 更新到新的模块名称\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::data::DataManager`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\python_strategy\\mod.rs","byte_start":706,"byte_end":730,"line_start":22,"line_end":22,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use crate::data::DataManager;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\mod.rs","byte_start":702,"byte_end":732,"line_start":22,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::data::DataManager;","highlight_start":1,"highlight_end":30},{"text":"use crate::trading::TradingManager;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `crate::data::DataManager`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\mod.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::data::DataManager;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::trading::TradingManager`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\python_strategy\\mod.rs","byte_start":736,"byte_end":766,"line_start":23,"line_end":23,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use crate::trading::TradingManager;","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\mod.rs","byte_start":732,"byte_end":768,"line_start":23,"line_end":24,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::trading::TradingManager;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `crate::trading::TradingManager`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\mod.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::trading::TradingManager;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `PyList`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":383,"byte_end":389,"line_start":10,"line_end":10,"column_start":27,"column_end":33,"is_primary":true,"text":[{"text":"use pyo3::types::{PyDict, PyList};","highlight_start":27,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":381,"byte_end":389,"line_start":10,"line_end":10,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"use pyo3::types::{PyDict, PyList};","highlight_start":25,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":374,"byte_end":375,"line_start":10,"line_end":10,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"use pyo3::types::{PyDict, PyList};","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":389,"byte_end":390,"line_start":10,"line_end":10,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"use pyo3::types::{PyDict, PyList};","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `PyList`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:10:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse pyo3::types::{PyDict, PyList};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Result`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":453,"byte_end":459,"line_start":14,"line_end":14,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":453,"byte_end":461,"line_start":14,"line_end":14,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":452,"byte_end":453,"line_start":14,"line_end":14,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\python_strategy\\wrapper.rs","byte_start":470,"byte_end":471,"line_start":14,"line_end":14,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Result`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\python_strategy\\wrapper.rs:14:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `CzscError` and `types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\platform\\market_engine\\mod.rs","byte_start":114,"byte_end":123,"line_start":5,"line_end":5,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\platform\\market_engine\\mod.rs","byte_start":125,"byte_end":133,"line_start":5,"line_end":5,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\platform\\market_engine\\mod.rs","byte_start":112,"byte_end":133,"line_start":5,"line_end":5,"column_start":19,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":19,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\platform\\market_engine\\mod.rs","byte_start":105,"byte_end":106,"line_start":5,"line_end":5,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\platform\\market_engine\\mod.rs","byte_start":133,"byte_end":134,"line_start":5,"line_end":5,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `CzscError` and `types::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\platform\\market_engine\\mod.rs:5:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError, types::*};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::arch::x86_64::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\platform\\optimization\\simd_accelerated.rs","byte_start":3393,"byte_end":3413,"line_start":116,"line_end":116,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"        use std::arch::x86_64::*;","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\platform\\optimization\\simd_accelerated.rs","byte_start":3389,"byte_end":3414,"line_start":116,"line_end":116,"column_start":9,"column_end":34,"is_primary":true,"text":[{"text":"        use std::arch::x86_64::*;","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::arch::x86_64::*`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\platform\\optimization\\simd_accelerated.rs:116:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        use std::arch::x86_64::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Hash`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\platform\\optimization\\cache_optimization.rs","byte_start":263,"byte_end":267,"line_start":10,"line_end":10,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"use std::hash::{Hash, Hasher};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\platform\\optimization\\cache_optimization.rs","byte_start":263,"byte_end":269,"line_start":10,"line_end":10,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"use std::hash::{Hash, Hasher};","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\platform\\optimization\\cache_optimization.rs","byte_start":262,"byte_end":263,"line_start":10,"line_end":10,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"use std::hash::{Hash, Hasher};","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\platform\\optimization\\cache_optimization.rs","byte_start":275,"byte_end":276,"line_start":10,"line_end":10,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"use std::hash::{Hash, Hasher};","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Hash`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\platform\\optimization\\cache_optimization.rs:10:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::hash::{Hash, Hasher};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crossbeam::channel`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\platform\\optimization\\parallel_computing.rs","byte_start":297,"byte_end":315,"line_start":11,"line_end":11,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use crossbeam::channel;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\platform\\optimization\\parallel_computing.rs","byte_start":293,"byte_end":317,"line_start":11,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crossbeam::channel;","highlight_start":1,"highlight_end":24},{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `crossbeam::channel`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\platform\\optimization\\parallel_computing.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crossbeam::channel;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":830,"byte_end":844,"line_start":21,"line_end":21,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":826,"byte_end":846,"line_start":21,"line_end":22,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"use tokio::sync::RwLock;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::sync::Arc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\mod.rs:21:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::Arc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `tokio::sync::RwLock`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":850,"byte_end":869,"line_start":22,"line_end":22,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use tokio::sync::RwLock;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\mod.rs","byte_start":846,"byte_end":871,"line_start":22,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use tokio::sync::RwLock;","highlight_start":1,"highlight_end":25},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `tokio::sync::RwLock`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\mod.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::sync::RwLock;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":176,"byte_end":184,"line_start":6,"line_end":6,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*, data::DataQuery};","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":174,"byte_end":184,"line_start":6,"line_end":6,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*, data::DataQuery};","highlight_start":30,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `types::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\backtest_engine.rs:6:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError, types::*, data::DataQuery};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":303,"byte_end":308,"line_start":9,"line_end":9,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, Mutex};","highlight_start":27,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":301,"byte_end":308,"line_start":9,"line_end":9,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, Mutex};","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":294,"byte_end":295,"line_start":9,"line_end":9,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, Mutex};","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":308,"byte_end":309,"line_start":9,"line_end":9,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, Mutex};","highlight_start":32,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Mutex`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\backtest_engine.rs:9:27\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::sync::{RwLock, Mutex};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::cmp::Ordering`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":450,"byte_end":468,"line_start":14,"line_end":14,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::cmp::Ordering;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\backtest_engine.rs","byte_start":446,"byte_end":470,"line_start":14,"line_end":15,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::cmp::Ordering;","highlight_start":1,"highlight_end":24},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::cmp::Ordering`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\backtest_engine.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::cmp::Ordering;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\market_simulator.rs","byte_start":165,"byte_end":173,"line_start":6,"line_end":6,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\market_simulator.rs","byte_start":163,"byte_end":173,"line_start":6,"line_end":6,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":30,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `types::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\market_simulator.rs:6:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError, types::*};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\cost_model.rs","byte_start":150,"byte_end":158,"line_start":6,"line_end":6,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\cost_model.rs","byte_start":148,"byte_end":158,"line_start":6,"line_end":6,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":30,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `types::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\cost_model.rs:6:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError, types::*};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `DateTime` and `Utc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\cost_model.rs","byte_start":205,"byte_end":213,"line_start":8,"line_end":8,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc};","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\backtest\\cost_model.rs","byte_start":215,"byte_end":218,"line_start":8,"line_end":8,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc};","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\cost_model.rs","byte_start":192,"byte_end":221,"line_start":8,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc};","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `DateTime` and `Utc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\cost_model.rs:8:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse chrono::{DateTime, Utc};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `CzscError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\backtest_analyzer.rs","byte_start":134,"byte_end":143,"line_start":6,"line_end":6,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\backtest_analyzer.rs","byte_start":132,"byte_end":143,"line_start":6,"line_end":6,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\backtest\\backtest_analyzer.rs","byte_start":125,"byte_end":126,"line_start":6,"line_end":6,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\backtest\\backtest_analyzer.rs","byte_start":143,"byte_end":144,"line_start":6,"line_end":6,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError};","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `CzscError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\backtest_analyzer.rs:6:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\backtest_analyzer.rs","byte_start":150,"byte_end":175,"line_start":7,"line_end":7,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\backtest_analyzer.rs","byte_start":146,"byte_end":177,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"use chrono::{DateTime, Utc};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\backtest_analyzer.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `DateTime` and `Utc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\backtest_analyzer.rs","byte_start":190,"byte_end":198,"line_start":8,"line_end":8,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc};","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\backtest\\backtest_analyzer.rs","byte_start":200,"byte_end":203,"line_start":8,"line_end":8,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc};","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\backtest_analyzer.rs","byte_start":177,"byte_end":206,"line_start":8,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc};","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `DateTime` and `Utc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\backtest_analyzer.rs:8:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse chrono::{DateTime, Utc};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `CzscError` and `types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\backtest\\portfolio_tracker.rs","byte_start":134,"byte_end":143,"line_start":6,"line_end":6,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\backtest\\portfolio_tracker.rs","byte_start":145,"byte_end":153,"line_start":6,"line_end":6,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\backtest\\portfolio_tracker.rs","byte_start":132,"byte_end":153,"line_start":6,"line_end":6,"column_start":19,"column_end":40,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":19,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\backtest\\portfolio_tracker.rs","byte_start":125,"byte_end":126,"line_start":6,"line_end":6,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\backtest\\portfolio_tracker.rs","byte_start":153,"byte_end":154,"line_start":6,"line_end":6,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"use crate::{Result, CzscError, types::*};","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `CzscError` and `types::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\portfolio_tracker.rs:6:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, CzscError, types::*};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `BTreeMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":667,"byte_end":675,"line_start":17,"line_end":17,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, BTreeMap};","highlight_start":33,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":665,"byte_end":675,"line_start":17,"line_end":17,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, BTreeMap};","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\performance\\mod.rs","byte_start":657,"byte_end":658,"line_start":17,"line_end":17,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, BTreeMap};","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\performance\\mod.rs","byte_start":675,"byte_end":676,"line_start":17,"line_end":17,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, BTreeMap};","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `BTreeMap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\performance\\mod.rs:17:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, BTreeMap};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":773,"byte_end":781,"line_start":20,"line_end":20,"column_start":29,"column_end":37,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc, Duration};","highlight_start":29,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":771,"byte_end":781,"line_start":20,"line_end":20,"column_start":27,"column_end":37,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Utc, Duration};","highlight_start":27,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Duration`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\performance\\mod.rs:20:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse chrono::{DateTime, Utc, Duration};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":788,"byte_end":802,"line_start":21,"line_end":21,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":784,"byte_end":804,"line_start":21,"line_end":22,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"use tokio::sync::RwLock;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::sync::Arc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\performance\\mod.rs:21:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::Arc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `tokio::sync::RwLock`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":808,"byte_end":827,"line_start":22,"line_end":22,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use tokio::sync::RwLock;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\performance\\mod.rs","byte_start":804,"byte_end":829,"line_start":22,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use tokio::sync::RwLock;","highlight_start":1,"highlight_end":25},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `tokio::sync::RwLock`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\performance\\mod.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::sync::RwLock;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\monitoring\\mod.rs","byte_start":531,"byte_end":539,"line_start":16,"line_end":16,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\monitoring\\mod.rs","byte_start":529,"byte_end":539,"line_start":16,"line_end":16,"column_start":19,"column_end":29,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":19,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\monitoring\\mod.rs","byte_start":522,"byte_end":523,"line_start":16,"line_end":16,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\monitoring\\mod.rs","byte_start":539,"byte_end":540,"line_start":16,"line_end":16,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"use crate::{Result, types::*};","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `types::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\monitoring\\mod.rs:16:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{Result, types::*};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `VecDeque`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\monitoring\\mod.rs","byte_start":574,"byte_end":582,"line_start":17,"line_end":17,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, VecDeque};","highlight_start":33,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\monitoring\\mod.rs","byte_start":572,"byte_end":582,"line_start":17,"line_end":17,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, VecDeque};","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\monitoring\\mod.rs","byte_start":564,"byte_end":565,"line_start":17,"line_end":17,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, VecDeque};","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\monitoring\\mod.rs","byte_start":582,"byte_end":583,"line_start":17,"line_end":17,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"use std::collections::{HashMap, VecDeque};","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `VecDeque`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\monitoring\\mod.rs:17:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::{HashMap, VecDeque};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\monitoring\\mod.rs","byte_start":695,"byte_end":709,"line_start":21,"line_end":21,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\monitoring\\mod.rs","byte_start":691,"byte_end":711,"line_start":21,"line_end":22,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::sync::Arc;","highlight_start":1,"highlight_end":20},{"text":"use tokio::sync::{RwLock, mpsc};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::sync::Arc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\monitoring\\mod.rs:21:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::Arc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `RwLock` and `mpsc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\monitoring\\mod.rs","byte_start":729,"byte_end":735,"line_start":22,"line_end":22,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, mpsc};","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\monitoring\\mod.rs","byte_start":737,"byte_end":741,"line_start":22,"line_end":22,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, mpsc};","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\monitoring\\mod.rs","byte_start":711,"byte_end":744,"line_start":22,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use tokio::sync::{RwLock, mpsc};","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `RwLock` and `mpsc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\monitoring\\mod.rs:22:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::sync::{RwLock, mpsc};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `TradeStatus`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\trading\\execution.rs","byte_start":13780,"byte_end":13791,"line_start":396,"line_end":396,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"                status: TradeStatus::Filled,","highlight_start":25,"highlight_end":36}],"label":"use of undeclared type `TradeStatus`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an enum with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src\\trading\\execution.rs","byte_start":13780,"byte_end":13791,"line_start":396,"line_end":396,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"                status: TradeStatus::Filled,","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":"OrderStatus","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `TradeStatus`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\trading\\execution.rs:396:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m396\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                status: TradeStatus::Filled,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `TradeStatus`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an enum with a similar name exists: `OrderStatus`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `rand`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\backtest\\market_simulator.rs","byte_start":7102,"byte_end":7106,"line_start":221,"line_end":221,"column_start":65,"column_end":69,"is_primary":true,"text":[{"text":"        let fill_quantity = if config.simulate_partial_fills && rand::random::<f64>() < 0.1 {","highlight_start":65,"highlight_end":69}],"label":"use of undeclared crate or module `rand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `rand`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\market_simulator.rs:221:65\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let fill_quantity = if config.simulate_partial_fills && rand::random::<f64>() < 0.1 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rand`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `rand`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\backtest\\market_simulator.rs","byte_start":7168,"byte_end":7172,"line_start":222,"line_end":222,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"            order.quantity * (0.5 + rand::random::<f64>() * 0.5) // 50%-100%成交","highlight_start":37,"highlight_end":41}],"label":"use of undeclared crate or module `rand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `rand`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\market_simulator.rs:222:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            order.quantity * (0.5 + rand::random::<f64>() * 0.5) // 50%-100%成交\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rand`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `rand`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\backtest\\market_simulator.rs","byte_start":7344,"byte_end":7348,"line_start":228,"line_end":228,"column_start":42,"column_end":46,"is_primary":true,"text":[{"text":"        if config.simulate_rejections && rand::random::<f64>() < 0.05 {","highlight_start":42,"highlight_end":46}],"label":"use of undeclared crate or module `rand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `rand`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\market_simulator.rs:228:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if config.simulate_rejections && rand::random::<f64>() < 0.05 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rand`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `rand`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\backtest\\market_simulator.rs","byte_start":10161,"byte_end":10165,"line_start":309,"line_end":309,"column_start":38,"column_end":42,"is_primary":true,"text":[{"text":"                let random_factor = (rand::random::<f64>() - 0.5) * 2.0 * std_dev;","highlight_start":38,"highlight_end":42}],"label":"use of undeclared crate or module `rand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `rand`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\market_simulator.rs:309:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let random_factor = (rand::random::<f64>() - 0.5) * 2.0 * std_dev;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rand`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `rand`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\backtest\\market_simulator.rs","byte_start":10429,"byte_end":10433,"line_start":314,"line_end":314,"column_start":36,"column_end":40,"is_primary":true,"text":[{"text":"                let random_value = rand::random::<f64>();","highlight_start":36,"highlight_end":40}],"label":"use of undeclared crate or module `rand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `rand`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\backtest\\market_simulator.rs:314:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let random_value = rand::random::<f64>();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rand`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 54 previous errors; 71 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 54 previous errors; 71 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0405, E0412, E0422, E0432, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0405, E0412, E0422, E0432, E0433.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0405`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0405`.\u001b[0m\n"}
